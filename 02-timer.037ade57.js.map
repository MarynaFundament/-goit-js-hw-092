{"mappings":"sEACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAUC,GAC/B,KAAMD,aAAoBC,GACtB,MAAM,IAAIC,UAAU,oC,WCG5B,SAASC,EAAkBC,EAAQC,GAC/B,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAI,CACjC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDhB,OAAOC,eAAeQ,EAAQI,EAAWI,IAAKJ,E,EAftDb,OAAOC,eAAeiB,EAAS,aAAc,CACzCf,OAAO,IAEXe,EAAQd,QACR,SAAsBE,EAAaa,EAAYC,GACvCD,GAAYX,EAAkBF,EAAYe,UAAWF,GACrDC,GAAaZ,EAAkBF,EAAac,GAChD,OAAOd,C,ECRX,IAAMgB,EAAUC,SAASC,cAAc,oBACjCC,EAAWF,SAASC,cAAc,gBACxCE,QAAQC,IAAIF,GACZ,IAQIG,EAREC,EAAWN,SAASC,cAAc,eAClCM,EAAYP,SAASC,cAAc,gBACnCO,EAAcR,SAASC,cAAc,kBACrCQ,EAAcT,SAASC,cAAc,kBAI3CC,EAASQ,UAAW,EAGpB,IAAMC,EAAU,CACZC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAA,SAAQC,GACNf,QAAQC,IAAIc,EAAc,IAE1Bb,EAAaa,EAAc,GAC3B,IAAMC,EAAc,IAAIJ,KAEpBV,EAAac,EACfC,MAAM,sCAIJf,EAAac,IACfjB,EAASQ,UAAW,E,GAK1BW,UAAUtB,EAASY,GAErB,IAgEMW,EAAQ,IAAX,W,sBAhEGC,EACUC,G,IAAAC,EAAAD,EAACC,O,aACTC,KAAKC,WAAa,KAClBD,KAAKD,OAASA,C,iBAGlB/B,IAAA,Q,MAAA,W,WACIgC,KAAKC,WAAaC,aAAY,WAC5B,IAAMC,EAAc,IAAId,KAClBe,EAAYzB,EAAawB,EAE/B,GAAIC,GAAa,EAGf,OAFAC,EAAKN,OAAO,CAAEO,KAAM,KAAMC,MAAO,KAAMC,QAAS,KAAMC,QAAS,YAC/DC,cAAcL,EAAKJ,YAKrB,IAA0CU,EAAAN,EAAKO,UAAUR,GAAjDE,EAAkCK,EAAlCL,KAAMC,EAA4BI,EAA5BJ,MAAOC,EAAqBG,EAArBH,QAASC,EAAYE,EAAZF,QAC9BJ,EAAKN,OAAO,CAAEO,OAAMC,QAAOC,UAASC,W,GACnC,I,IAmBJzC,IAAA,Y,MAAA,SAAU6C,GAET,IACMC,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EAWZ,MAAO,CAAEV,KARIN,KAAKkB,IAAIC,KAAKC,MAAMP,EAAKI,IAQvBV,MANDP,KAAKkB,IAAIC,KAAKC,MAAMP,EAAMI,EAAOD,IAMzBR,QAJNR,KAAKkB,IAAIC,KAAKC,MAAMP,EAAOI,EAAOD,EAAQF,IAI3BL,QAFfT,KAAKkB,IAAIC,KAAKC,MAAMP,EAAQI,EAAOD,EAAQF,EAZ5C,M,IAkBlB9C,IAAA,M,MAAA,SAAId,GACD,OAAOmE,OAAOnE,GAAOoE,SAAS,EAAG,I,OAItC,GAAW,CAAU,CACpBvB,OAWJ,SAAyBD,G,IAAEQ,EAAFR,EAAEQ,KAAMC,EAART,EAAQS,MAAOC,EAAfV,EAAeU,QAASC,EAAxBX,EAAwBW,QAC/C7B,EAAS2C,YAAc,GAAQC,OAALlB,GAC1BzB,EAAU0C,YAAc,GAASC,OAANjB,GAC3BzB,EAAYyC,YAAc,GAAWC,OAARhB,GAC7BzB,EAAYwC,YAAc,GAAWC,OAARf,E,IAX/BjC,EAASiD,iBAAkB,SAAQ,WACjC7B,EAAM8B,O","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/02-timer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","const myInput = document.querySelector(\"#datetime-picker\");\nconst startBtn = document.querySelector(\"[data-start]\");\nconsole.log(startBtn);\nconst dataDays = document.querySelector(\"[data-days]\");\nconst dataHours = document.querySelector(\"[data-hours]\");\nconst dataMinutes = document.querySelector(\"[data-minutes]\");\nconst dataSeconds = document.querySelector(\"[data-seconds]\");\n\n\n\nstartBtn.disabled = true;\nlet chosenData;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      console.log(selectedDates[0]);\n  \n      chosenData = selectedDates[0];\n      const currentDate = new Date();\n  \n      if (chosenData < currentDate) {\n        alert(\"Please choose a date in the future\");\n        return;\n      }\n  \n      if (chosenData > currentDate) {\n        startBtn.disabled = false\n    }\n   }\n  };\n  \n  flatpickr(myInput, options);\n\nclass Timer{\n    constructor({onTick}){\n        this.intervalId = null \n        this.onTick = onTick;\n    }\n\n    start() {\n        this.intervalId = setInterval(() => {\n          const currentTime = new Date();\n          const deltaTime = chosenData - currentTime;\n\n          if (deltaTime <= 0) {\n            this.onTick({ days: \"00\", hours: \"00\", minutes: \"00\", seconds: \"00\" });\n            clearInterval(this.intervalId);\n            return;\n          }\n\n          \n          const { days, hours, minutes, seconds } = this.convertMs(deltaTime);\n          this.onTick({ days, hours, minutes, seconds } )\n        }, 1000);\n\n        \n\n      }\n\n      \n\n    //   if(deltaTime < = 0){\n    //     clearInterval(this.intervalId )\n    //     return \n    //   }\n    \n    \n    // stop(){\n    //     clearInterval(this.intervalId)\n    //   }\n\n\n       convertMs(ms) {\n        // Number of milliseconds per unit of time\n        const second = 1000;\n        const minute = second * 60;\n        const hour = minute * 60;\n        const day = hour * 24;\n      \n        // Remaining days\n        const days = this.pad(Math.floor(ms / day));\n        // Remaining hours\n        const hours = this.pad(Math.floor((ms % day) / hour));\n        // Remaining minutes\n        const minutes = this.pad(Math.floor(((ms % day) % hour) / minute));\n        // Remaining seconds\n        const seconds = this.pad(Math.floor((((ms % day) % hour) % minute) / second));\n      \n        return { days, hours, minutes, seconds };\n      }\n\n\n     pad(value) {\n        return String(value).padStart(2, \"0\");\n      }\n}\n\nconst timer = new Timer({\n    onTick:updateClockface\n    \n});\n\nstartBtn.addEventListener(`click`, () => {\n  timer.start();\n  \n});\n\n\n\nfunction updateClockface({ days, hours, minutes, seconds }) {\n  dataDays.textContent = `${days}`;\n  dataHours.textContent = `${hours}`;\n  dataMinutes.textContent = `${minutes}`;\n  dataSeconds.textContent = `${seconds}`;\n}\n\n\n\n"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$84b9dae4df53835d$var$myInput","document","querySelector","$84b9dae4df53835d$var$startBtn","console","log","$84b9dae4df53835d$var$chosenData","$84b9dae4df53835d$var$dataDays","$84b9dae4df53835d$var$dataHours","$84b9dae4df53835d$var$dataMinutes","$84b9dae4df53835d$var$dataSeconds","disabled","$84b9dae4df53835d$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","currentDate","alert","flatpickr","$84b9dae4df53835d$var$timer","Timer","param","onTick","this","intervalId","setInterval","currentTime","deltaTime","_this","days","hours","minutes","seconds","clearInterval","ref","convertMs","ms","minute","second","hour","day","pad","Math","floor","String","padStart","textContent","concat","addEventListener","start"],"version":3,"file":"02-timer.037ade57.js.map"}