{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAe,SA4BrC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAM,CAAEL,WAAUC,SAExB,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLP,EACFK,EAAQF,GAERG,EAAOH,E,GAERJ,E,IAtCPS,QAAQC,IAAIf,GAEZA,EAAKgB,iBAAkB,UAEvB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOpB,EAAKK,MAAMgB,OAC9BP,QAAQC,IAAII,GAEZ,IAAI,IAAIG,EAAI,EAAGA,GAAKtB,EAAKuB,OAAOF,MAAOC,GAAK,EAE1CnB,EAAcmB,EAAGH,GAClBK,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBS,QAAQC,IAAI,uBAAwCW,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE3DsB,OAAM,SAAAF,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBS,QAAQC,IAAI,sBAAuCW,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAG3Dc,GAASC,OAAOpB,EAAK4B,KAAKP,M","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector(`.form`)\nconsole.log(form)\n\nform.addEventListener(`submit`, onSubmitForm)\n\nfunction onSubmitForm(event){\n  event.preventDefault();\n\n  let delay = Number(form.delay.value)\n  console.log(delay)\n\n  for(let i = 1; i <= form.amount.value; i += 1){\n  \n    createPromise(i, delay)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n  delay += Number(form.step.value);\n\n  }\n\n\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const obj = { position, delay };\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(obj); // Fulfill \n      } else {\n        reject(obj);   // Reject\n      }\n    }, delay);\n  });\n}\n\n\n\n  \n\n\n\n\n// const formRef = document.querySelector('.form');\n\n// // Set event listener submit on form\n// formRef.addEventListener('submit', onSubmitForm);\n\n// // Submit form\n// function onSubmitForm(e) {\n//   e.preventDefault();\n\n//   let delay = Number(formRef.delay.value);\n\n//   for (let i = 1; i <= formRef.amount.value; i += 1) {\n//     createPromise(i, delay)\n//       .then(({ position, delay }) => {\n//         console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//       });\n//     delay += Number(formRef.step.value);\n//   }\n// }\n\n// // Create promise\n// function createPromise(position, delay) {\n//   const obj = { position, delay };\n//   const shouldResolve = Math.random() > 0.3;\n\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         // Fulfill\n//         resolve(obj);\n//       } else {\n//         // Reject\n//         reject(obj);\n//       }\n//     }, delay);\n//   });\n// }\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","obj","Promise","resolve","reject","setTimeout","console","log","addEventListener","event","preventDefault","delay1","Number","value","i","amount","then","param","concat","catch","step"],"version":3,"file":"03-promises.1563c1cb.js.map"}